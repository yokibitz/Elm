var _user$project$Main$viewValidation = function (model) {
	var _p0 = (!A2(_elm_lang$core$String$all, _elm_lang$core$Char$isDigit, model.age)) ? {ctor: '_Tuple2', _0: 'red', _1: 'age must be a number'} : ((!_elm_lang$core$Native_Utils.eq(model.password, model.passwordAgain)) ? {ctor: '_Tuple2', _0: 'red', _1: 'passwords don\'t match'} : ((_elm_lang$core$Native_Utils.cmp(
		_elm_lang$core$String$length(model.password),
		8) < 0) ? {ctor: '_Tuple2', _0: 'red', _1: 'password must be at least 8 characters'} : ((!(A2(_elm_lang$core$String$any, _elm_lang$core$Char$isLower, model.password) && (A2(_elm_lang$core$String$any, _elm_lang$core$Char$isUpper, model.password) && A2(_elm_lang$core$String$any, _elm_lang$core$Char$isDigit, model.password)))) ? {ctor: '_Tuple2', _0: 'red', _1: 'password must be contain upper case, lower case, and numeric characters'} : {ctor: '_Tuple2', _0: 'green', _1: 'OK'})));
	var color = _p0._0;
	var message = _p0._1;
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'color', _1: color},
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$hidden(!model.validate),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(message),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p1 = msg;
		switch (_p1.ctor) {
			case 'Name':
				return _elm_lang$core$Native_Utils.update(
					model,
					{name: _p1._0});
			case 'Password':
				return _elm_lang$core$Native_Utils.update(
					model,
					{password: _p1._0});
			case 'PasswordAgain':
				return _elm_lang$core$Native_Utils.update(
					model,
					{passwordAgain: _p1._0});
			case 'Age':
				return _elm_lang$core$Native_Utils.update(
					model,
					{age: _p1._0});
			default:
				return _elm_lang$core$Native_Utils.update(
					model,
					{validate: true});
		}
	});
var _user$project$Main$Model = F5(
	function (a, b, c, d, e) {
		return {name: a, password: b, passwordAgain: c, age: d, validate: e};
	});
var _user$project$Main$model = A5(_user$project$Main$Model, '', '', '', '', false);
var _user$project$Main$Submit = {ctor: 'Submit'};
var _user$project$Main$Age = function (a) {
	return {ctor: 'Age', _0: a};
};
var _user$project$Main$PasswordAgain = function (a) {
	return {ctor: 'PasswordAgain', _0: a};
};
var _user$project$Main$Password = function (a) {
	return {ctor: 'Password', _0: a};
};
var _user$project$Main$Name = function (a) {
	return {ctor: 'Name', _0: a};
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$type_('text'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder('name'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$Name),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('text'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$placeholder('age'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$Age),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('password'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$placeholder('password'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$Password),
									_1: {ctor: '[]'}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('password'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$placeholder('password again'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$PasswordAgain),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: _user$project$Main$viewValidation(model),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$button,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Submit),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Submit'),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Main$model, view: _user$project$Main$view, update: _user$project$Main$update})();
var _user$project$Main$CharacterVariationNotSatisfied = function (a) {
	return {ctor: 'CharacterVariationNotSatisfied', _0: a};
};
var _user$project$Main$MinimumLengthNotSatisfied = function (a) {
	return {ctor: 'MinimumLengthNotSatisfied', _0: a};
};
var _user$project$Main$AgeNotANumber = function (a) {
	return {ctor: 'AgeNotANumber', _0: a};
};
var _user$project$Main$PasswordsDontMatch = function (a) {
	return {ctor: 'PasswordsDontMatch', _0: a};
};
var _user$project$Main$OK = function (a) {
	return {ctor: 'OK', _0: a};
};
